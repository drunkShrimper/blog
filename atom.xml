<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>今天你进步了吗?</title>
  
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://drunkShrimper.github.io/blog/"/>
  <updated>2019-11-30T13:36:15.284Z</updated>
  <id>http://drunkShrimper.github.io/blog/</id>
  
  <author>
    <name>lipan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据库基本概念</title>
    <link href="http://drunkShrimper.github.io/blog/2019/11/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>http://drunkShrimper.github.io/blog/2019/11/30/数据库基本概念/</id>
    <published>2019-11-30T11:15:46.000Z</published>
    <updated>2019-11-30T13:36:15.284Z</updated>
    
    <content type="html"><![CDATA[<p>Redundancy 冗余<br>Inconsistency 不一致<br>Integrity 完整性<br>Schema – the logical structure of the database 数据模式（数据库的总体设计）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Redundancy 冗余&lt;br&gt;Inconsistency 不一致&lt;br&gt;Integrity 完整性&lt;br&gt;Schema – the logical structure of the database 数据模式（数据库的总体设计）&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="数据库" scheme="http://drunkShrimper.github.io/blog/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="http://drunkShrimper.github.io/blog/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>多个串的公共子序列</title>
    <link href="http://drunkShrimper.github.io/blog/2019/11/05/%E5%A4%9A%E4%B8%AA%E4%B8%B2%E7%9A%84%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>http://drunkShrimper.github.io/blog/2019/11/05/多个串的公共子序列/</id>
    <published>2019-11-05T02:50:09.000Z</published>
    <updated>2019-11-05T02:51:30.752Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000000</span>+<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> len[<span class="number">110</span>]= &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> xlen[<span class="number">110</span>]= &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">string</span> str[<span class="number">110</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getXlen</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        xlen[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            xlen[i] *= len[j] ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mapping</span><span class="params">(<span class="keyword">int</span> x[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> idx = x[<span class="number">1</span>] ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        idx += x[i]*xlen[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> idx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deMapping</span><span class="params">(<span class="keyword">int</span> m,<span class="keyword">int</span> x[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=n; i++) x[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;<span class="number">0</span>&amp;&amp;m!=<span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        x[i+<span class="number">1</span>] = m/xlen[i];</span><br><span class="line">        m = m%xlen[i] ;</span><br><span class="line">    &#125;</span><br><span class="line">    x[<span class="number">1</span>] = m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getF</span><span class="params">(<span class="keyword">int</span> x[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[mapping(x)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setF</span><span class="params">(<span class="keyword">int</span> x[],<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    a[mapping(x)] = value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">hasZero</span><span class="params">(<span class="keyword">int</span> x[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(x[i] == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;str[i];</span><br><span class="line">        len[i] = str[i].size() +<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    getXlen();</span><br><span class="line">    <span class="keyword">int</span> x[n+<span class="number">1</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) x[i] = <span class="number">0</span>;</span><br><span class="line">    setF(x,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> total_len = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        total_len *= len[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=total_len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i] =<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=total_len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        deMapping(i,x);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(hasZero(x))</span><br><span class="line">        &#123;</span><br><span class="line">            setF(x,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;n; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(str[j][x[j]<span class="number">-1</span>] != str[j + <span class="number">1</span>][x[j+<span class="number">1</span>]<span class="number">-1</span>] )</span><br><span class="line">                &#123;</span><br><span class="line">                    flag = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> tmp[n+<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    tmp[j] = x[j]<span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                setF(x,getF(tmp) + <span class="number">1</span>) ;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> tmp[n+<span class="number">1</span>],max_sub = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j&lt;=n; j++) tmp[j] = x[j];</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    tmp[j<span class="number">-1</span>] ++;</span><br><span class="line">                    tmp[j] --;</span><br><span class="line">                    <span class="keyword">if</span>(getF(tmp) &gt; max_sub) max_sub = getF(tmp);</span><br><span class="line">                &#125;</span><br><span class="line">                setF(x,max_sub);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=total_len;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>( a[i] &gt; result) result =a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;result;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="算法" scheme="http://drunkShrimper.github.io/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="dp 动态规划" scheme="http://drunkShrimper.github.io/blog/tags/dp-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>50道sql练习题</title>
    <link href="http://drunkShrimper.github.io/blog/2019/10/14/50%E9%81%93sql%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    <id>http://drunkShrimper.github.io/blog/2019/10/14/50道sql练习题/</id>
    <published>2019-10-14T15:51:36.000Z</published>
    <updated>2019-12-25T08:50:30.825Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在网上找的50道SQL练习（使用Oracle）"><a href="#在网上找的50道SQL练习（使用Oracle）" class="headerlink" title="在网上找的50道SQL练习（使用Oracle）"></a>在网上找的50道SQL练习（使用Oracle）</h1><h1 id="数据表创建"><a href="#数据表创建" class="headerlink" title="数据表创建"></a>数据表创建</h1><ol><li>学生表 Student</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Student(<span class="keyword">SId</span> <span class="built_in">varchar</span>(<span class="number">10</span>),Sname <span class="built_in">varchar</span>(<span class="number">10</span>),Sage <span class="built_in">date</span>,Ssex <span class="built_in">varchar</span>(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'01'</span> , <span class="string">'赵雷'</span> , <span class="keyword">to_date</span>(<span class="string">'1990-01-01'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'02'</span> , <span class="string">'钱电'</span> , <span class="keyword">to_date</span>(<span class="string">'1990-12-21'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'03'</span> , <span class="string">'孙风'</span> , <span class="keyword">to_date</span>(<span class="string">'1990-12-20'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'04'</span> , <span class="string">'李云'</span> , <span class="keyword">to_date</span>(<span class="string">'1990-12-06'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'男'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'05'</span> , <span class="string">'周梅'</span> , <span class="keyword">to_date</span>(<span class="string">'1991-12-01'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'06'</span> , <span class="string">'吴兰'</span> , <span class="keyword">to_date</span>(<span class="string">'1992-01-01'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'07'</span> , <span class="string">'郑竹'</span> , <span class="keyword">to_date</span>(<span class="string">'1989-01-01'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'09'</span> , <span class="string">'张三'</span> , <span class="keyword">to_date</span>(<span class="string">'2017-12-20'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'10'</span> , <span class="string">'李四'</span> , <span class="keyword">to_date</span>(<span class="string">'2017-12-25'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'11'</span> , <span class="string">'李四'</span> , <span class="keyword">to_date</span>(<span class="string">'2012-06-06'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'12'</span> , <span class="string">'赵六'</span> , <span class="keyword">to_date</span>(<span class="string">'2013-06-13'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'女'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Student <span class="keyword">values</span>(<span class="string">'13'</span> , <span class="string">'孙七'</span> , <span class="keyword">to_date</span>(<span class="string">'2014-06-01'</span>,<span class="string">'yyyy-MM-dd'</span>) , <span class="string">'女'</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>科目表 Course</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Course(CId <span class="built_in">varchar</span>(<span class="number">10</span>),Cname <span class="built_in">varchar</span>(<span class="number">10</span>),TId <span class="built_in">varchar</span>(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Course <span class="keyword">values</span>(<span class="string">'01'</span> , <span class="string">'语文'</span> , <span class="string">'02'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Course <span class="keyword">values</span>(<span class="string">'02'</span> , <span class="string">'数学'</span> , <span class="string">'01'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Course <span class="keyword">values</span>(<span class="string">'03'</span> , <span class="string">'英语'</span> , <span class="string">'03'</span>);</span><br></pre></td></tr></table></figure><ol start="3"><li>教师表 Teacher</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Teacher(TId <span class="built_in">varchar</span>(<span class="number">10</span>),Tname <span class="built_in">varchar</span>(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Teacher <span class="keyword">values</span>(<span class="string">'01'</span> , <span class="string">'张三'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Teacher <span class="keyword">values</span>(<span class="string">'02'</span> , <span class="string">'李四'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Teacher <span class="keyword">values</span>(<span class="string">'03'</span> , <span class="string">'王五'</span>);</span><br></pre></td></tr></table></figure><ol start="4"><li>成绩表 SC</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> SC(<span class="keyword">SId</span> <span class="built_in">varchar</span>(<span class="number">10</span>),CId <span class="built_in">varchar</span>(<span class="number">10</span>),score <span class="built_in">decimal</span>(<span class="number">18</span>,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'01'</span> , <span class="string">'01'</span> , <span class="number">80</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'01'</span> , <span class="string">'02'</span> , <span class="number">90</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'01'</span> , <span class="string">'03'</span> , <span class="number">99</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'02'</span> , <span class="string">'01'</span> , <span class="number">70</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'02'</span> , <span class="string">'02'</span> , <span class="number">60</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'02'</span> , <span class="string">'03'</span> , <span class="number">80</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'03'</span> , <span class="string">'01'</span> , <span class="number">80</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'03'</span> , <span class="string">'02'</span> , <span class="number">80</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'03'</span> , <span class="string">'03'</span> , <span class="number">80</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'04'</span> , <span class="string">'01'</span> , <span class="number">50</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'04'</span> , <span class="string">'02'</span> , <span class="number">30</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'04'</span> , <span class="string">'03'</span> , <span class="number">20</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'05'</span> , <span class="string">'01'</span> , <span class="number">76</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'05'</span> , <span class="string">'02'</span> , <span class="number">87</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'06'</span> , <span class="string">'01'</span> , <span class="number">31</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'06'</span> , <span class="string">'03'</span> , <span class="number">34</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'07'</span> , <span class="string">'02'</span> , <span class="number">89</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> SC <span class="keyword">values</span>(<span class="string">'07'</span> , <span class="string">'03'</span> , <span class="number">98</span>);</span><br></pre></td></tr></table></figure><h1 id="练习题目"><a href="#练习题目" class="headerlink" title="练习题目"></a>练习题目</h1><h2 id="题组1"><a href="#题组1" class="headerlink" title="题组1"></a>题组1</h2><h3 id="题型1"><a href="#题型1" class="headerlink" title="题型1"></a>题型1</h3><ol><li>查询” 01 “课程比” 02 “课程成绩高的学生的信息及课程分数</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> t1.*,t2.score 课程<span class="number">02</span>分数 <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> * <span class="keyword">from</span> SC <span class="keyword">natural</span> <span class="keyword">join</span> student <span class="keyword">where</span> sc.cid = <span class="string">'01'</span>) t1, </span><br><span class="line">(<span class="keyword">select</span> * <span class="keyword">from</span> SC <span class="keyword">natural</span> <span class="keyword">join</span> student <span class="keyword">where</span> sc.cid = <span class="string">'02'</span>) t2</span><br><span class="line"><span class="keyword">where</span> t1.score &gt; t2.score <span class="keyword">and</span> t1.sid = t2.sid;</span><br></pre></td></tr></table></figure><ol start="2"><li>查询同时存在” 01 “课程和” 02 “课程的情况</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> t1.*,t2.score 课程<span class="number">02</span>分数 <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> * <span class="keyword">from</span> SC <span class="keyword">natural</span> <span class="keyword">join</span> student <span class="keyword">where</span> sc.cid = <span class="string">'01'</span>) t1, </span><br><span class="line">(<span class="keyword">select</span> * <span class="keyword">from</span> SC <span class="keyword">natural</span> <span class="keyword">join</span> student <span class="keyword">where</span> sc.cid = <span class="string">'02'</span>) t2</span><br><span class="line"><span class="keyword">where</span> t1.sid = t2.sid;</span><br></pre></td></tr></table></figure><ol start="3"><li>查询存在” 01 “课程但可能不存在” 02 “课程的情况(不存在时显示为 null )</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> t1.*,t2.score 课程<span class="number">02</span>分数 <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> * <span class="keyword">from</span> SC <span class="keyword">natural</span> <span class="keyword">join</span> student <span class="keyword">where</span> sc.cid = <span class="string">'01'</span>) t1 <span class="keyword">left</span> <span class="keyword">join</span></span><br><span class="line">(<span class="keyword">select</span> * <span class="keyword">from</span> SC <span class="keyword">natural</span> <span class="keyword">join</span> student <span class="keyword">where</span> sc.cid = <span class="string">'02'</span>) t2</span><br><span class="line"><span class="keyword">on</span> t1.sid = t2.sid;</span><br></pre></td></tr></table></figure><ol start="4"><li>查询不存在” 01 “课程但存在” 02 “课程的情况</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> * <span class="keyword">from</span> SC <span class="keyword">natural</span> <span class="keyword">join</span> student <span class="keyword">where</span> sc.cid = <span class="string">'02'</span>)  <span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">not</span> <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> SC <span class="keyword">where</span> cid = <span class="string">'01'</span>) ;</span><br></pre></td></tr></table></figure><h3 id="题型2"><a href="#题型2" class="headerlink" title="题型2"></a>题型2</h3><ol><li>查询平均成绩大于等于 60 分的同学的学生编号和学生姓名和平均成绩</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.sid,s.sname,t.avg_score <span class="keyword">from</span> </span><br><span class="line">  student s,</span><br><span class="line">  (<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(score) avg_score <span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) t </span><br><span class="line"><span class="keyword">where</span> s.sid = t.sid <span class="keyword">and</span> t.avg_score&gt;<span class="number">60</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.sid,s.sname,t.avg_score <span class="keyword">from</span> </span><br><span class="line">  student s,</span><br><span class="line">  (<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(score) avg_score <span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> <span class="keyword">having</span> <span class="keyword">avg</span>(score)&gt;<span class="number">60</span>) t</span><br><span class="line"><span class="keyword">where</span> s.sid = t.sid;</span><br></pre></td></tr></table></figure><h3 id="题型3"><a href="#题型3" class="headerlink" title="题型3"></a>题型3</h3><ol><li>查询在 SC 表存在成绩的学生信息</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> <span class="keyword">sid</span> <span class="keyword">from</span> SC);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">DISTINCT</span> student.* <span class="keyword">from</span> student,sc <span class="keyword">where</span> student.SId=sc.SId;</span><br></pre></td></tr></table></figure><h3 id="题型4"><a href="#题型4" class="headerlink" title="题型4"></a>题型4</h3><ol><li>查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩(没成绩的显示为 null )</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.sid,s.sname,t.count_course,t.sum_score <span class="keyword">from</span> </span><br><span class="line">student s, </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">count</span>(cid) count_course,<span class="keyword">sum</span>(score) sum_score <span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) t </span><br><span class="line"><span class="keyword">where</span> s.sid = t.sid;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.sid,s.sname,t.count_course,t.sum_score <span class="keyword">from</span> </span><br><span class="line">student s </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">count</span>(cid) count_course,<span class="keyword">sum</span>(score) sum_score <span class="keyword">from</span> SC <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) t </span><br><span class="line"><span class="keyword">on</span> s.sid = t.sid;</span><br></pre></td></tr></table></figure><ol start="2"><li>查有成绩的学生信息</li></ol><p><strong>这里涉及到一个知识点：当表2的记录数量非常大的时候，选用exists比in要高效很多</strong></p><blockquote><p>EXISTS用于检查子查询是否至少会返回一行数据，该子查询实际上并不返回任何数据，而是返回值True或False.<br>结论：IN()适合B表比A表数据小的情况<br>结论：EXISTS()适合B表比A表数据大的情况</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">distinct</span> <span class="keyword">sid</span> <span class="keyword">from</span> SC);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">exists</span> (<span class="keyword">select</span> sc.sid <span class="keyword">from</span> sc <span class="keyword">where</span> student.sid = sc.sid);</span><br></pre></td></tr></table></figure><h3 id="题型5"><a href="#题型5" class="headerlink" title="题型5"></a>题型5</h3><ol><li>查询「李」姓老师的数量</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> teacher <span class="keyword">where</span> tname <span class="keyword">like</span> <span class="string">'李_%'</span>;</span><br></pre></td></tr></table></figure><h3 id="题型6"><a href="#题型6" class="headerlink" title="题型6"></a>题型6</h3><ol><li>查询学过「张三」老师授课的同学的信息</li></ol><p>先上一种笨方法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> sc <span class="keyword">where</span> cid =  </span><br><span class="line">     ( <span class="keyword">select</span> cid <span class="keyword">from</span> course <span class="keyword">where</span> tid = </span><br><span class="line">      (<span class="keyword">select</span> tid <span class="keyword">from</span> teacher <span class="keyword">where</span> tname = <span class="string">'张三'</span>)));</span><br></pre></td></tr></table></figure><p>下面的方法一开始理解起来有些困难，但这是很普通的<strong>多表联查</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> student.* <span class="keyword">from</span> student,teacher,course,sc</span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line">    student.sid = sc.sid </span><br><span class="line">    <span class="keyword">and</span> course.cid=sc.cid </span><br><span class="line">    <span class="keyword">and</span> course.tid = teacher.tid </span><br><span class="line">    <span class="keyword">and</span> tname = <span class="string">'张三'</span>;</span><br></pre></td></tr></table></figure><h3 id="题型7"><a href="#题型7" class="headerlink" title="题型7"></a>题型7</h3><ol><li>查询没有学全所有课程的同学的信息</li></ol><p>第一种做法<strong>忽略了有的学生一门课都没学</strong>的情况（所以其sid不会出现在SC表）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span>  <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> <span class="keyword">having</span> <span class="keyword">count</span>(cid) &lt;(<span class="keyword">select</span> <span class="keyword">count</span>(cid) <span class="keyword">from</span> course));</span><br></pre></td></tr></table></figure><p>正确的做法应该是先查出修了所有课程的学生，再求其相对于所有学生集的补集</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> student.sid <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">  <span class="keyword">select</span> sc.sid <span class="keyword">from</span> sc</span><br><span class="line">  <span class="keyword">group</span> <span class="keyword">by</span> sc.sid</span><br><span class="line">  <span class="keyword">having</span> <span class="keyword">count</span>(sc.cid)= (<span class="keyword">select</span> <span class="keyword">count</span>(cid) <span class="keyword">from</span> course)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="题型8"><a href="#题型8" class="headerlink" title="题型8"></a>题型8</h3><ol><li>查询至少有一门课与学号为” 01 “的同学所学相同的同学的信息</li></ol><p>思路：student表要和SC表作联合查询这是毫无疑问的，在查询时要多加一个限制条件“课程id要属于学号为” 01 “的同学所学的课程id集合”</p><p><strong>同理可以使用natural join，实质上natural join跟表联查是等价的。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> student.* </span><br><span class="line"><span class="keyword">from</span> student,SC </span><br><span class="line"><span class="keyword">where</span> SC.cid <span class="keyword">in</span> (<span class="keyword">select</span> cid <span class="keyword">from</span> SC <span class="keyword">where</span> <span class="keyword">sid</span> = <span class="string">'01'</span>) <span class="keyword">and</span> student.sid=SC.sid;</span><br></pre></td></tr></table></figure><h3 id="题型9"><a href="#题型9" class="headerlink" title="题型9"></a>题型9</h3><ol><li>查询和” 01 “号的同学学习的课程完全相同的其他同学的信息</li></ol><p>这题本来不用写这么长但是由于这个操作：<strong>”取一个中间表的某字段最大的记录（即：top N问题）“</strong>使得这个查询变得很长，实际上没有这么长</p><p>分析：</p><p>首先取出sid为“01”的学生学习的所有课程的cid，这个应该不难</p><p>然后根据SC表中每个学生的每门成绩有且仅有一条记录这个原则：</p><ul><li>查询出SC中所有学生中有学习“01”学生学习的课程的记录</li><li>对上一条操作得到的中间表进行分组（根据sid），并计算count(cid)</li><li>如果某学生的count(cid)和”01“学生的count(cid)相同，则说明他们所学习的课程完全一样。同样的，如果某学生的count(cid)小于”01“学生的count(cid)，说明他学的课有和”01“学生相同的，但没有学完”01“学生学的所有课。如果某学生并不在这个查询结果内，说明他学的课没有一门是”01“学生学的课。</li><li>最后根据题目要求还要排除“01”学生这条记录</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.* <span class="keyword">from</span> </span><br><span class="line">student s,</span><br><span class="line">(<span class="keyword">select</span> * <span class="keyword">from</span> </span><br><span class="line">    (<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">count</span>(cid) same_num <span class="keyword">from</span> SC </span><br><span class="line">        <span class="keyword">where</span> cid <span class="keyword">in</span> (<span class="keyword">select</span> cid <span class="keyword">from</span> SC <span class="keyword">where</span> <span class="keyword">sid</span> = <span class="string">'01'</span>) <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>)</span><br><span class="line"><span class="keyword">where</span> same_num = (<span class="keyword">select</span> <span class="keyword">count</span>(cid) <span class="keyword">from</span> SC <span class="keyword">where</span> <span class="keyword">sid</span> =<span class="string">'01'</span>)) t</span><br><span class="line"><span class="keyword">where</span> s.sid =t.sid <span class="keyword">and</span> s.sid &lt;&gt; <span class="string">'01'</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.* <span class="keyword">from</span> </span><br><span class="line">student s,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> SC </span><br><span class="line">        <span class="keyword">where</span> cid <span class="keyword">in</span> (<span class="keyword">select</span> cid <span class="keyword">from</span> SC <span class="keyword">where</span> <span class="keyword">sid</span> = <span class="string">'01'</span>) <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> <span class="keyword">having</span></span><br><span class="line"><span class="keyword">count</span>(cid) = (<span class="keyword">select</span> <span class="keyword">count</span>(cid) <span class="keyword">from</span> SC <span class="keyword">where</span> <span class="keyword">sid</span> =<span class="string">'01'</span>)) t</span><br><span class="line"><span class="keyword">where</span> s.sid =t.sid <span class="keyword">and</span> s.sid &lt;&gt; <span class="string">'01'</span>;</span><br></pre></td></tr></table></figure><h3 id="题型10"><a href="#题型10" class="headerlink" title="题型10"></a>题型10</h3><ol><li>查询没学过”张三”老师讲授的任一门课程的学生姓名</li></ol><p>这题思路跟<strong>题型7</strong>一样，要查没学过“张三”老师的课的学生，应该先查学过的，在求补集。如果直接求的话，会出现有人一门课都没学过的情况。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span>  <span class="keyword">sid</span> <span class="keyword">from</span> sc <span class="keyword">where</span> cid  <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> cid <span class="keyword">from</span> course <span class="keyword">where</span> tid = (<span class="keyword">select</span> tid <span class="keyword">from</span> teacher <span class="keyword">where</span> tname = <span class="string">'张三'</span>) ));</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> student.sid <span class="keyword">not</span> <span class="keyword">in</span>(</span><br><span class="line">    <span class="keyword">select</span> sc.sid <span class="keyword">from</span> sc,course,teacher </span><br><span class="line">    <span class="keyword">where</span></span><br><span class="line">        sc.cid = course.cid</span><br><span class="line">        <span class="keyword">and</span> course.tid = teacher.tid</span><br><span class="line">        <span class="keyword">and</span> teacher.tname= <span class="string">"张三"</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="题组2"><a href="#题组2" class="headerlink" title="题组2"></a>题组2</h2><h3 id="题型1-1"><a href="#题型1-1" class="headerlink" title="题型1"></a>题型1</h3><ol><li>查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> s.sid 学号,s.sname 姓名,t2.avg_score 平均成绩 </span><br><span class="line"><span class="keyword">from</span> student s,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> sc <span class="keyword">where</span> score&lt;<span class="number">60</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> <span class="keyword">having</span> <span class="keyword">count</span>(cid)&gt;<span class="number">1</span>) t1,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(score) avg_score <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) t2</span><br><span class="line"><span class="keyword">where</span> t1.sid = t2.sid <span class="keyword">and</span> s.sid = t1.sid;</span><br></pre></td></tr></table></figure><h3 id="题型2-1"><a href="#题型2-1" class="headerlink" title="题型2"></a>题型2</h3><ol><li>检索” 01 “课程分数小于 60，按分数降序排列的学生信息</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">natural</span> <span class="keyword">join</span> sc </span><br><span class="line"><span class="keyword">where</span> score &lt;<span class="number">60</span> <span class="keyword">and</span> cid = <span class="string">'01'</span> </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span> ;</span><br></pre></td></tr></table></figure><h3 id="题型3-1"><a href="#题型3-1" class="headerlink" title="题型3"></a>题型3</h3><ol><li>按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩</li></ol><p>此题本身难倒是不难，反而是如何显示要下一番功夫</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> * <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,<span class="string">'avg'</span> cid,<span class="keyword">avg</span>(score) score <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">sid</span>,<span class="keyword">case</span> <span class="keyword">when</span> cid = <span class="string">'avg'</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> <span class="keyword">asc</span>,score <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h3 id="题型4-1"><a href="#题型4-1" class="headerlink" title="题型4"></a>题型4</h3><ol><li>查询各科成绩最高分、最低分和平均分：</li></ol><p>以如下形式显示：课程 ID，课程 name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率</p><p>及格为&gt;=60，中等为：70-80，优良为：80-90，优秀为：&gt;=90</p><p>要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列</p><p><strong>这里没有查出课程名，如果要查的话natural join一下course表即可</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">cid 课程<span class="keyword">ID</span>,</span><br><span class="line"><span class="keyword">count</span>(*) 选修人数,</span><br><span class="line"><span class="keyword">max</span>(sc.score) 最高分,</span><br><span class="line"><span class="keyword">min</span>(sc.score) 最低分,</span><br><span class="line"><span class="keyword">AVG</span>(sc.score) 平均分,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score&gt;=<span class="number">60</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> )/<span class="keyword">count</span>(*) 及格率,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score&gt;=<span class="number">70</span> <span class="keyword">and</span> sc.score&lt;<span class="number">80</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> )/<span class="keyword">count</span>(*) 中等率,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score&gt;=<span class="number">80</span> <span class="keyword">and</span> sc.score&lt;<span class="number">90</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> )/<span class="keyword">count</span>(*) 优良率,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> sc.score&gt;=<span class="number">90</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span> )/<span class="keyword">count</span>(*) 优秀率 </span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> cid</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">count</span>(*) <span class="keyword">DESC</span>, cid <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><h3 id="题型5-1"><a href="#题型5-1" class="headerlink" title="题型5"></a>题型5</h3><ol><li>按各科成绩进行排序，并显示排名， Score 重复时保留名次空缺</li></ol><p>思路:</p><ul><li>首先查出比自己高分的记录有多少条，注意利用左连接的特点使得第一名（因为没有人比他高分，不使用左连接的话会没有第一名的记录比较麻烦）能被记录。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *</span><br><span class="line"><span class="keyword">from</span> sc  a </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sc  b </span><br><span class="line"><span class="keyword">on</span> a.score&lt;b.score <span class="keyword">and</span> a.cid = b.cid <span class="keyword">order</span> <span class="keyword">by</span> a.sid;</span><br></pre></td></tr></table></figure><ul><li>在得到的上表中，对于sid来说有多少条记录就说明排名是多少,但是因为需求是 <strong>Score 重复时保留名次空缺</strong>，因此不用<code>count(a.sid)</code>(或<code>count(a.cid)</code>,<code>count(a.score)</code>)而是使用<code>count(b.score)+1</code>,这样在计数比自己高的人数时就不会把自己算进去（因为使用的是<code>left join</code>,自己那一条记录的<code>b.score</code>是为<code>null</code> 的）</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> a.cid, a.sid, a.score, <span class="keyword">count</span>(b.score)+<span class="number">1</span>  <span class="keyword">rank</span></span><br><span class="line"><span class="keyword">from</span> sc  a </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sc  b </span><br><span class="line"><span class="keyword">on</span> a.score&lt;b.score <span class="keyword">and</span> a.cid = b.cid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> a.cid, a.sid,a.score</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> a.cid, <span class="keyword">rank</span> <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>按各科成绩进行排序，并显示排名， Score 重复时不保留名次空缺</li></ol><p>此题与题型6的第2题情况一样</p><h3 id="题型6-1"><a href="#题型6-1" class="headerlink" title="题型6"></a>题型6</h3><ol><li>查询学生的总成绩，并进行排名，总分重复时保留名次空缺</li></ol><p>与题型5第1题解法类似</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> t.sid,t.score,<span class="keyword">count</span>(t2.score)+<span class="number">1</span> <span class="keyword">rank</span> </span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">sum</span>(score) score <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) t </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">sum</span>(score) score <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) t2 </span><br><span class="line"><span class="keyword">on</span> t.score&lt;t2.score  </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> t.sid,t.score <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span>(*);</span><br></pre></td></tr></table></figure><ol start="2"><li>查询学生的总成绩，并进行排名，总分重复时不保留名次空缺</li></ol><p>这题没什么好思路，直接抄的别人的答案。在SQL里面变量用@来标识。但是在Oracle中的语法好像不是这样定义变量的，还是说应该使用plsql来解决？（下面是mysql的解法）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> @crank=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">select</span> q.sid, total, @crank := @crank +<span class="number">1</span> <span class="keyword">as</span> <span class="keyword">rank</span> <span class="keyword">from</span>(</span><br><span class="line"><span class="keyword">select</span> sc.sid, <span class="keyword">sum</span>(sc.score) <span class="keyword">as</span> total <span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.sid</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> total <span class="keyword">desc</span>)q;</span><br></pre></td></tr></table></figure><h3 id="题型7-1"><a href="#题型7-1" class="headerlink" title="题型7"></a>题型7</h3><ol><li>统计各科成绩各分数段人数：课程编号，课程名称，[100-85]，[85-70]，[70-60]，[60-0] 及所占百分比</li></ol><p>这里要注意<code>case when 条件 then 1 else 0 end</code>的原理，它是返回数值1或0，如果使用<code>count</code>来接收的话，不论是1还是0都会计数。效果跟<code>count(*)</code>一样，所以此处应该使用<code>sum</code>来计数，如果还不明白，将<code>sum(case when 条件 then 2 else 0 end)</code>和<code>count(case when 条件 then 2 else 0 end)</code>查询一下就明白了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> cid,cname,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score&gt;=<span class="number">85</span> <span class="keyword">and</span> score &lt;=<span class="number">100</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">"[100-85]人数"</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score&gt;=<span class="number">70</span> <span class="keyword">and</span> score &lt;<span class="number">85</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">"[85-70]人数"</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score&gt;=<span class="number">60</span> <span class="keyword">and</span> score &lt;<span class="number">70</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">"[70-60]人数"</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score&gt;=<span class="number">0</span> <span class="keyword">and</span> score &lt;<span class="number">60</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="string">"[60-0]人数"</span>,</span><br><span class="line"><span class="keyword">round</span>(<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score&gt;=<span class="number">85</span> <span class="keyword">and</span> score &lt;=<span class="number">100</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">count</span>(*),<span class="number">2</span>) </span><br><span class="line"><span class="string">"[100-85]比例"</span>,</span><br><span class="line"><span class="keyword">round</span>(<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score&gt;=<span class="number">70</span> <span class="keyword">and</span> score &lt;<span class="number">85</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">count</span>(*),<span class="number">2</span>) </span><br><span class="line"><span class="string">"[85-70]比例"</span>,</span><br><span class="line"><span class="keyword">round</span>(<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score&gt;=<span class="number">60</span> <span class="keyword">and</span> score &lt;<span class="number">70</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">count</span>(*),<span class="number">2</span>) </span><br><span class="line"><span class="string">"[70-60]比例"</span>,</span><br><span class="line"><span class="keyword">round</span>(<span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score&gt;=<span class="number">0</span> <span class="keyword">and</span> score &lt;<span class="number">60</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>)/<span class="keyword">count</span>(*),<span class="number">2</span>) </span><br><span class="line"><span class="string">"[60-0]比例"</span></span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">natural</span> <span class="keyword">join</span> course <span class="keyword">group</span> <span class="keyword">by</span> cid,cname;</span><br></pre></td></tr></table></figure><h3 id="题型8-1"><a href="#题型8-1" class="headerlink" title="题型8"></a>题型8</h3><ol><li>查询各科成绩前三名的记录</li></ol><p>这个题目还是有点麻烦，因为Oracle不支持像mysql里面的<code>limit</code>语法。这里查询了一下资料，可以使用<code>OVER(PARTITION BY)</code>函数。附上一篇<a href="https://www.jianshu.com/p/e756a7d322f3" target="_blank" rel="noopener">讲解博客</a>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> sc.*,row_number() <span class="keyword">over</span>(<span class="keyword">partition</span> <span class="keyword">by</span> cid <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span>  ) <span class="keyword">rank</span> <span class="keyword">from</span> sc) </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">rank</span> &lt; <span class="number">4</span>;</span><br></pre></td></tr></table></figure><p>但是上面的解法有个问题，如果有相同分数的就有点难办了。所以还是得用“找出比自己高分的人数”的思路来确定自己的排名。解法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> (<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> sc  a <span class="keyword">where</span> sc.cid = a.cid <span class="keyword">and</span> sc.score&lt;a.score )&lt; <span class="number">3</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> cid <span class="keyword">asc</span>, sc.score <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h2 id="题组3"><a href="#题组3" class="headerlink" title="题组3"></a>题组3</h2><h3 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h3><ol><li>查询每门课程被选修的学生数</li></ol><p>查成绩单上每门课对应的记录条数即可。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> cid,<span class="keyword">count</span>(*) <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cid;</span><br></pre></td></tr></table></figure><h3 id="题目2"><a href="#题目2" class="headerlink" title="题目2"></a>题目2</h3><ol><li>查询出只选修两门课程的学生学号和姓名</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname <span class="keyword">from</span> sc <span class="keyword">natural</span> <span class="keyword">join</span> student <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>,sname <span class="keyword">having</span> <span class="keyword">count</span>(*) =<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h3 id="题目3"><a href="#题目3" class="headerlink" title="题目3"></a>题目3</h3><ol><li>查询男生、女生人数</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ssex 性别,<span class="keyword">count</span>(*) 人数  <span class="keyword">from</span> student <span class="keyword">group</span> <span class="keyword">by</span> ssex;</span><br></pre></td></tr></table></figure><h3 id="题目4"><a href="#题目4" class="headerlink" title="题目4"></a>题目4</h3><ol><li>查询名字中含有「风」字的学生信息</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> *<span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">'%风%'</span>;</span><br></pre></td></tr></table></figure><h3 id="题目5"><a href="#题目5" class="headerlink" title="题目5"></a>题目5</h3><ol><li>查询同名同性学生名单，并统计同名人数</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  s1.sname 姓名,<span class="keyword">count</span>(*) 人数 <span class="keyword">from</span> </span><br><span class="line">student s1,student s2 </span><br><span class="line"><span class="keyword">where</span> s1.sid &lt;&gt; s2.sid <span class="keyword">and</span> s1.sname = s2.sname <span class="keyword">group</span> <span class="keyword">by</span> s1.sname;</span><br></pre></td></tr></table></figure><h3 id="题目6"><a href="#题目6" class="headerlink" title="题目6"></a>题目6</h3><ol><li>查询 1990 年出生的学生名单</li></ol><p>注：在Oracle里面没有<code>year()</code>函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> to_char(sage,<span class="string">'YYYY'</span>) = <span class="string">'1990'</span> ;</span><br></pre></td></tr></table></figure><h3 id="题目7"><a href="#题目7" class="headerlink" title="题目7"></a>题目7</h3><ol><li>查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> cname,cid,<span class="keyword">round</span>(<span class="keyword">avg</span>(score),<span class="number">2</span>) <span class="keyword">from</span> </span><br><span class="line">sc <span class="keyword">natural</span> <span class="keyword">join</span> course </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cid,cname <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">avg</span>(score) <span class="keyword">desc</span>,cid <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure><h3 id="题目8"><a href="#题目8" class="headerlink" title="题目8"></a>题目8</h3><ol><li>查询平均成绩大于等于 85 的所有学生的学号、姓名和平均成绩</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname,<span class="keyword">round</span>(<span class="keyword">avg</span>(score),<span class="number">2</span>) <span class="keyword">from</span> student <span class="keyword">natural</span> <span class="keyword">join</span> sc <span class="keyword">group</span> <span class="keyword">by</span> sname,<span class="keyword">sid</span> <span class="keyword">having</span> <span class="keyword">avg</span>(score) &gt;=<span class="number">85</span>;</span><br></pre></td></tr></table></figure><h3 id="题目9"><a href="#题目9" class="headerlink" title="题目9"></a>题目9</h3><ol><li>查询课程名称为「数学」，且分数低于 60 的学生姓名和分数</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname,score <span class="keyword">from</span> </span><br><span class="line">sc,course,student </span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line">sc.cid = course.cid <span class="keyword">and</span> course.cname = <span class="string">'数学'</span> <span class="keyword">and</span> sc.sid = student.sid <span class="keyword">and</span> sc.score&lt;<span class="number">60</span>;</span><br></pre></td></tr></table></figure><h3 id="题目10"><a href="#题目10" class="headerlink" title="题目10"></a>题目10</h3><ol><li>查询所有学生的课程及分数情况（存在学生没成绩，没选课的情况）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sid,sname,cname,score <span class="keyword">from</span> </span><br><span class="line">student <span class="keyword">left</span> <span class="keyword">join</span> (<span class="keyword">select</span> * <span class="keyword">from</span> sc <span class="keyword">natural</span> <span class="keyword">join</span> course) t </span><br><span class="line"><span class="keyword">on</span> student.sid = t.sid;</span><br></pre></td></tr></table></figure><h2 id="题组4"><a href="#题组4" class="headerlink" title="题组4"></a>题组4</h2><h3 id="题目1-1"><a href="#题目1-1" class="headerlink" title="题目1"></a>题目1</h3><ol><li>查询任何一门课程成绩在 70 分以上的姓名、课程名称和分数</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname,cname,score <span class="keyword">from</span> </span><br><span class="line">student <span class="keyword">natural</span> <span class="keyword">join</span>  sc <span class="keyword">natural</span> <span class="keyword">join</span> course</span><br><span class="line"><span class="keyword">where</span> score&gt;<span class="number">70</span>;</span><br></pre></td></tr></table></figure><p>解法2：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> student.sname, course.cname,sc.score <span class="keyword">from</span> student,course,sc</span><br><span class="line"><span class="keyword">where</span> sc.score&gt;<span class="number">70</span></span><br><span class="line"><span class="keyword">and</span> student.sid = sc.sid</span><br><span class="line"><span class="keyword">and</span> sc.cid = course.cid;</span><br></pre></td></tr></table></figure><h3 id="题目2-1"><a href="#题目2-1" class="headerlink" title="题目2"></a>题目2</h3><ol><li>查询存在有人不及格的课程</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> cname <span class="keyword">from</span> sc <span class="keyword">natural</span> <span class="keyword">join</span> course <span class="keyword">where</span> score &lt; <span class="number">60</span>;</span><br></pre></td></tr></table></figure><h3 id="题目3-1"><a href="#题目3-1" class="headerlink" title="题目3"></a>题目3</h3><ol><li>查询课程编号为 01 且课程成绩在 80 分以上的学生的学号和姓名</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname <span class="keyword">from</span> sc <span class="keyword">natural</span> <span class="keyword">join</span> student <span class="keyword">where</span> score &gt;= <span class="number">80</span> <span class="keyword">and</span> cid = <span class="string">'01'</span>;</span><br></pre></td></tr></table></figure><h3 id="题目4-1"><a href="#题目4-1" class="headerlink" title="题目4"></a>题目4</h3><ol><li>求每门课程的学生人数</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> cname,<span class="keyword">count</span>(<span class="keyword">sid</span>) <span class="keyword">from</span> sc <span class="keyword">natural</span> <span class="keyword">join</span> course <span class="keyword">group</span> <span class="keyword">by</span> cname;</span><br></pre></td></tr></table></figure><h3 id="题目5-1"><a href="#题目5-1" class="headerlink" title="题目5"></a>题目5</h3><ol><li>成绩不重复，查询选修「张三」老师所授课程的学生中，成绩最高的学生信息及其成绩</li></ol><p>要注意一个老师是可以有多门课的，这里的数据恰好是只有一门课。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> student.*,t.* <span class="keyword">from</span> </span><br><span class="line">sc ,</span><br><span class="line">student,</span><br><span class="line">(<span class="keyword">select</span> cid,<span class="keyword">max</span>(score) score  <span class="keyword">from</span> sc </span><br><span class="line"> <span class="keyword">where</span> cid </span><br><span class="line"> <span class="keyword">in</span>(<span class="keyword">select</span> cid <span class="keyword">from</span> course <span class="keyword">natural</span> <span class="keyword">join</span> teacher <span class="keyword">where</span> tname =<span class="string">'张三'</span>) <span class="keyword">group</span> <span class="keyword">by</span> cid) t</span><br><span class="line"><span class="keyword">where</span> sc.sid = student.sid <span class="keyword">and</span> sc.cid = t.cid <span class="keyword">and</span> sc.score = t.score;</span><br></pre></td></tr></table></figure><h3 id="题目6-1"><a href="#题目6-1" class="headerlink" title="题目6"></a>题目6</h3><ol start="2"><li>查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> t1.* <span class="keyword">from</span> sc t1 <span class="keyword">inner</span> <span class="keyword">join</span> sc t2 </span><br><span class="line"><span class="keyword">on</span> t1.cid = t2.cid <span class="keyword">and</span> t1.score = t2.score <span class="keyword">and</span> t1.sid &lt;&gt; t2.sid <span class="keyword">order</span> <span class="keyword">by</span> t1.cid;</span><br></pre></td></tr></table></figure><h3 id="题目7-1"><a href="#题目7-1" class="headerlink" title="题目7"></a>题目7</h3><ol><li>查询每门课成绩排名前2的学生</li></ol><p>这题在Oracle里面还是比较麻烦，解题思路跟<strong>题组2 题型5</strong>差不多</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> t1.cid,t1.sid,<span class="keyword">count</span>(*) <span class="keyword">from</span> </span><br><span class="line">sc t1 <span class="keyword">left</span> <span class="keyword">join</span> sc t2 <span class="keyword">on</span> </span><br><span class="line">t2.score&gt;t1.score <span class="keyword">and</span> t1.sid &lt;&gt; t2.sid <span class="keyword">and</span> t1.cid = t2.cid  </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> t1.cid,t1.sid <span class="keyword">having</span> <span class="keyword">count</span>(*)&lt;=<span class="number">2</span> <span class="keyword">order</span> <span class="keyword">by</span> cid;</span><br></pre></td></tr></table></figure><h3 id="题目8-1"><a href="#题目8-1" class="headerlink" title="题目8"></a>题目8</h3><ol><li>统计每门课程的学生选修人数（超过 5 人的课程才统计）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> cid,<span class="keyword">count</span>(*) <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cid <span class="keyword">having</span> <span class="keyword">count</span>(*) &gt;<span class="number">5</span>;</span><br></pre></td></tr></table></figure><h3 id="题目9-1"><a href="#题目9-1" class="headerlink" title="题目9"></a>题目9</h3><ol><li>检索至少选修两门课程的学生学号</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>  <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> <span class="keyword">having</span> <span class="keyword">count</span>(cid) &gt;=<span class="number">2</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">sid</span>;</span><br></pre></td></tr></table></figure><h3 id="题目10-1"><a href="#题目10-1" class="headerlink" title="题目10"></a>题目10</h3><ol><li>查询选修了全部课程的学生信息</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> <span class="keyword">having</span> <span class="keyword">count</span>(cid) =(<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> course));</span><br></pre></td></tr></table></figure><h2 id="题组5"><a href="#题组5" class="headerlink" title="题组5"></a>题组5</h2><h3 id="题目1-2"><a href="#题目1-2" class="headerlink" title="题目1"></a>题目1</h3><ol><li>查询各学生的年龄，只按年份来算</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sname,<span class="keyword">round</span>(months_between(<span class="keyword">sysdate</span>,sage)/<span class="number">12</span>,<span class="number">0</span>) 年龄 <span class="keyword">from</span> student;</span><br></pre></td></tr></table></figure><h3 id="题目2-2"><a href="#题目2-2" class="headerlink" title="题目2"></a>题目2</h3><ol><li>查询本周过生日的学生</li></ol><p>在oracle里面貌似比较难实现…</p><p>思路：首先将出生日期的年份替换为当前年份，然后看这个日期是今年的第几周，是否与当前时间是当前第几周相同。（感觉解法是错的…有待研究）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>  <span class="keyword">from</span> student <span class="keyword">where</span> </span><br><span class="line">to_char(add_months(sage,(to_char(<span class="keyword">sysdate</span>,<span class="string">'yyyy'</span>) - to_char(sage,<span class="string">'yyyy'</span>))*<span class="number">12</span>),<span class="string">'ww'</span>) = </span><br><span class="line">to_char(<span class="keyword">sysdate</span>,<span class="string">'ww'</span>);</span><br></pre></td></tr></table></figure><h3 id="题目3-2"><a href="#题目3-2" class="headerlink" title="题目3"></a>题目3</h3><ol><li>查询下周过生日的学生</li></ol><p>这题要考虑边界情况，如果下周是下一年了就比较难搞了…（有待研究）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="题目4-2"><a href="#题目4-2" class="headerlink" title="题目4"></a>题目4</h3><ol><li>查询本月过生日的学生</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> to_char(<span class="keyword">sysdate</span>,<span class="string">'MM'</span>) = to_char(sage,<span class="string">'MM'</span>);</span><br></pre></td></tr></table></figure><h3 id="题目5-2"><a href="#题目5-2" class="headerlink" title="题目5"></a>题目5</h3><ol><li>查询下月过生日的学生</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> student <span class="keyword">where</span> <span class="keyword">MOD</span>(to_char(<span class="keyword">sysdate</span>,<span class="string">'MM'</span>)+<span class="number">1</span>,<span class="number">13</span>)= to_char(sage,<span class="string">'MM'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在网上找的50道SQL练习（使用Oracle）&quot;&gt;&lt;a href=&quot;#在网上找的50道SQL练习（使用Oracle）&quot; class=&quot;headerlink&quot; title=&quot;在网上找的50道SQL练习（使用Oracle）&quot;&gt;&lt;/a&gt;在网上找的50道SQL练习（使用O
      
    
    </summary>
    
    
      <category term="SQL" scheme="http://drunkShrimper.github.io/blog/categories/SQL/"/>
    
    
      <category term="sql" scheme="http://drunkShrimper.github.io/blog/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>算法:数的统计问题</title>
    <link href="http://drunkShrimper.github.io/blog/2019/09/24/%E7%AE%97%E6%B3%95-%E6%95%B0%E7%9A%84%E7%BB%9F%E8%AE%A1%E9%97%AE%E9%A2%98/"/>
    <id>http://drunkShrimper.github.io/blog/2019/09/24/算法-数的统计问题/</id>
    <published>2019-09-24T10:03:52.000Z</published>
    <updated>2019-09-24T10:09:00.047Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><blockquote><p><strong>一本书的页码从自然数1开始顺序编码直到自然数n。书的页码按照通常的习惯编排 <a id="more"></a>，每个页码都不含多余的前导数字0。例如第6页用6表示而不是06或006。数字统计问题要求对给定书的总页码，计算出书的全部页码中分别用到多少次数字0,1,2,3,…..9。</strong></p></blockquote><h1 id="解法1：暴力求解"><a href="#解法1：暴力求解" class="headerlink" title="解法1：暴力求解"></a>解法1：暴力求解</h1><p>这个没什么好说的，有编程基础的都会</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> totalNum[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        tmp = i;</span><br><span class="line">        <span class="keyword">while</span>(tmp)&#123;</span><br><span class="line">            totalNum[tmp%<span class="number">10</span>]+=<span class="number">1</span>;</span><br><span class="line">            tmp/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%ld"</span>,totalNum[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="解法2：递归求解"><a href="#解法2：递归求解" class="headerlink" title="解法2：递归求解"></a>解法2：递归求解</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;一本书的页码从自然数1开始顺序编码直到自然数n。书的页码按照通常的习惯编排
    
    </summary>
    
    
      <category term="算法" scheme="http://drunkShrimper.github.io/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="递归" scheme="http://drunkShrimper.github.io/blog/tags/%E9%80%92%E5%BD%92/"/>
    
  </entry>
  
  <entry>
    <title>算法理论之p问题、NP问题、NP完全问题与NP难问题</title>
    <link href="http://drunkShrimper.github.io/blog/2019/09/17/%E7%AE%97%E6%B3%95%E7%90%86%E8%AE%BA%E4%B9%8Bp%E9%97%AE%E9%A2%98%E3%80%81NP%E9%97%AE%E9%A2%98%E3%80%81NP%E5%AE%8C%E5%85%A8%E9%97%AE%E9%A2%98%E4%B8%8ENP%E9%9A%BE%E9%97%AE%E9%A2%98/"/>
    <id>http://drunkShrimper.github.io/blog/2019/09/17/算法理论之p问题、NP问题、NP完全问题与NP难问题/</id>
    <published>2019-09-17T12:20:44.000Z</published>
    <updated>2019-09-21T00:42:18.397Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础知识回顾"><a href="#基础知识回顾" class="headerlink" title="基础知识回顾"></a>基础知识回顾</h1><p>要了解上面的算法概念，首先要回顾一下<a id="more"></a>这两个基本的数学概念</p><ol><li><p>多项式函数</p><p>形如：形如 Pn(x)=a(n)x^n+a(n-1)x^(n-1)+…+a(1)x+a(0)的函数，叫做多项式函数</p><p>例如：y=kx+b 就是一个次数是1的多项式函数，y=ax^2+bx+c就是一个次数为2的多项式函数</p></li><li><p>时间复杂度</p><p>这个东西用大白话来讲就是衡量一个算法优劣的最重要指标，例如冒泡算法的时间复杂度是o(<em>n^2</em>)，其中n是指数据的规模。这里面的<em>n^2</em>就是一个多项式。  </p></li></ol><h1 id="那么什么是p类问题"><a href="#那么什么是p类问题" class="headerlink" title="那么什么是p类问题"></a>那么什么是p类问题</h1><p>例如冒泡算法的时间复杂度是o(<em>n^2</em>)，它是一个多项式时间的算法问题，所以我们将之称为P类问题(P：polynominal，多项式)。</p><h1 id="NP问题的定义"><a href="#NP问题的定义" class="headerlink" title="NP问题的定义"></a>NP问题的定义</h1><p>NP类问题：能在多项式时间内验证得出一个正确解的问题。(NP:Nondeterministic polynominal，非确定性多项式)</p><p><strong>P类问题是NP问题的子集，因为存在多项式时间解法的问题，总能在多项式时间内验证他。</strong></p><p>如何理解NP问题呢？</p><p>我们可以这样想：有一个问题，你不知道是否存在一个多项式算法来解决它，但是你可以通过一次次的猜测（或者说尝试）从而有机会在一个多项式的时间呢找出他的解。这种不确定性就可以称之为N。这样的问题就是NP问题啦。</p><h1 id="NPC问题"><a href="#NPC问题" class="headerlink" title="NPC问题"></a>NPC问题</h1><p>NPC问题:如果所有np问题都能在多项式时间内转化为他，则称该np问题为npc问题(NPC:NP complete又叫NP完全问题)</p><p>那么啥叫问题的转化呢？我们用最直白的想法来理解就是：要解决一个问题的前提是要解决另一个（或多个）问题，这样我们就可以将原来的问题转化为其他的问题了。就好比解方程组一样，求解出了其中一个未知数，就能够求解下一条方程。</p><p><strong>NPC问题是NP问题的子集。</strong></p><p>很多时候NPC问题是找不到一个多项式时间算法的，更多时候他是一个指数级的算法。</p><h1 id="感觉写的有点烂，最后转载一个大佬的讲解"><a href="#感觉写的有点烂，最后转载一个大佬的讲解" class="headerlink" title="感觉写的有点烂，最后转载一个大佬的讲解"></a>感觉写的有点烂，最后转载一个<a href="https://blog.csdn.net/qq_29176963/article/details/82776543" target="_blank" rel="noopener">大佬的讲解</a></h1><blockquote><ol><li>P类问题：能在多项式时间内可解的问题。</li><li>NP类问题：在多项式时间内“可验证”的问题。也就是说，不能判定这个问题到底有没有解，而是猜出一个解来在多项式时间内证明这个解是否正确。即该问题的猜测过程是不确定的，而对其某一个解的验证则能够在多项式时间内完成。P类问题属于NP问题，但NP类问题不一定属于P类问题。</li><li>NPC问题：存在这样一个NP问题，所有的NP问题都可以约化成它。换句话说，只要解决了这个问题，那么所有的NP问题都解决了。其定义要满足2个条件：</li></ol><ul><li>它是一个NP问题；</li><li>所有NP问题都能规约到它。</li></ul><ol start="4"><li><p>NP难问题：NP-Hard问题是这样一种问题，它满足NPC问题定义的第二条但不一定要满足第一条（就是说，NP-Hard问题要比 NPC问题的范围广，NP-Hard问题没有限定属于NP），即所有的NP问题都能约化到它，但是他不一定是一个NP问题。NP-Hard问题同样难以找到多项式的算法，但它不列入我们的研究范围，因为它不一定是NP问题。即使NPC问题发现了多项式级的算法，NP-Hard问题有可能仍然无法得到多项式级的算法。事实上，由于NP-Hard放宽了限定条件，它将有可能比所有的NPC问题的时间复杂度更高从而更难以解决。</p><p>以上四个问题之间的关系如下图所示：<br><img src="https://raw.githubusercontent.com/KunBB/MarkdownPhotos/master/PNPNPCNPhard/1.jpg" alt="Loading..."></p></li></ol></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础知识回顾&quot;&gt;&lt;a href=&quot;#基础知识回顾&quot; class=&quot;headerlink&quot; title=&quot;基础知识回顾&quot;&gt;&lt;/a&gt;基础知识回顾&lt;/h1&gt;&lt;p&gt;要了解上面的算法概念，首先要回顾一下
    
    </summary>
    
    
      <category term="算法" scheme="http://drunkShrimper.github.io/blog/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法理论" scheme="http://drunkShrimper.github.io/blog/tags/%E7%AE%97%E6%B3%95%E7%90%86%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Markdown基本语法</title>
    <link href="http://drunkShrimper.github.io/blog/2019/09/11/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://drunkShrimper.github.io/blog/2019/09/11/Markdown基本语法/</id>
    <published>2019-09-11T14:36:36.000Z</published>
    <updated>2019-09-12T08:09:15.974Z</updated>
    
    <content type="html"><![CDATA[<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题  "></a>二级标题  <a id="more"></a></h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h1 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h1><p>段落的换行是使用两个以上空格加上回车。<br>新的段落</p><p>或者使用空出一行的方式（推荐）。</p><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p><em>斜体1</em><br><em>斜体2</em><br><strong>粗体1</strong><br><strong>粗体2</strong><br><strong><em>斜粗体1</em></strong><br><strong><em>斜粗体2</em></strong><br><del>删除线</del><br><u>下划线</u></p><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><p>分割线有多种写法</p><hr><hr><hr><hr><hr><h1 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h1><p>hexo需要<a href="https://github.com/LouisBarranqueiro/hexo-footnotes" target="_blank" rel="noopener">安装插件</a>才能使用脚注</p><p>因为页面布局问题，脚注的效果并不是很好</p><p>这是一个脚注1<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>  </p><p>生成一个脚注2<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>  </p><p>生成一个脚注3<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>无序列表有三种写法  </p><ul><li>第一项</li><li>第二项</li><li>第三项 </li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>表项1</li><li>表项2</li><li>表项3</li></ul><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><ol><li>表项1</li><li>表项2</li><li>表项3</li></ol><h2 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h2><p>列表嵌套只需在子列表中的选项添加四个空格即可：  </p><ol><li>表项1<ul><li>子表项</li><li>子表项</li></ul></li><li>表项2<ol><li>子表项</li><li>子表项</li></ol></li></ol><h1 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h1><blockquote><p>区块效果</p><blockquote><p>区块效果</p><blockquote><p>区块效果</p></blockquote></blockquote></blockquote><h2 id="在列表中使用区块-amp-在区块中使用列表"><a href="#在列表中使用区块-amp-在区块中使用列表" class="headerlink" title="在列表中使用区块&amp;在区块中使用列表"></a>在列表中使用区块&amp;在区块中使用列表</h2><ul><li>表项<blockquote><p>区块</p><pre><code>1. 表项2. 表项</code></pre><p>区块</p><pre><code>* 表项* 表项</code></pre><blockquote><p>区块</p></blockquote></blockquote></li><li>表项</li><li>表项</li></ul><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="段落代码"><a href="#段落代码" class="headerlink" title="段落代码"></a>段落代码</h2><p>如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`）</p><p><code>print()</code> 函数的使用</p><h2 id="代码区块"><a href="#代码区块" class="headerlink" title="代码区块"></a>代码区块</h2><p>代码区块使用 4 个空格或者一个制表符（Tab 键）。  </p><pre><code>public void setEmpname(String empname){    this.empname=empname;}public void setBonus(Double bonus){    this.bonus=bonus;}</code></pre><p>可以用 ``` 包裹一段代码，并指定一种语言（这样可以语法高亮，也可以不指定）：  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmpname</span><span class="params">(String empname)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.empname=empname;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBonus</span><span class="params">(Double bonus)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.bonus=bonus;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">'RUNOOB'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>注意放在脚注下的内容是无效的，所以变量要写在脚注之前<br><a href="https://www.runoob.com" target="_blank" rel="noopener">Runoob</a><br><a href="http://www.baidu.com" target="_blank" rel="noopener">百度</a><br><a href="https://www.runoob.com" target="_blank" rel="noopener">https://www.runoob.com</a></p><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>hexo不建议使用Markdown的<code>![]()</code>方式引用图片，而是使用了<a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">新的方法</a>管理图片</p><img src="/blog/2019/09/11/Markdown基本语法/1.jpg" title="slug">  <p>如果要指定图片的高度与宽度，可以使用普通的 <code>&lt;img&gt;</code> 标签。<br><img src="1.jpg" width="50%"></p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><table><thead><tr><th align="left">表头</th><th align="right">表头</th><th align="center">表头</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style:none; padding-left: 0;"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">1.</span><span style="display: inline-block; vertical-align: top;">这里是 <strong>脚注</strong> 的 <em>内容</em>.</span><a href="#fnref:1" rev="footnote"> ↩</a></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">2.</span><span style="display: inline-block; vertical-align: top;">这里是<strong>脚注2</strong>的<em>内容</em>.</span><a href="#fnref:2" rev="footnote"> ↩</a></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px;">3.</span><span style="display: inline-block; vertical-align: top;">这里填写需要的脚注，一般放在页面最下面</span><a href="#fnref:3" rev="footnote"> ↩</a></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题  &quot;&gt;&lt;/a&gt;二级标题
    
    </summary>
    
    
      <category term="其它技术" scheme="http://drunkShrimper.github.io/blog/categories/%E5%85%B6%E5%AE%83%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Markdown" scheme="http://drunkShrimper.github.io/blog/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>总结过去与展望未来</title>
    <link href="http://drunkShrimper.github.io/blog/2019/09/11/%E6%80%BB%E7%BB%93%E8%BF%87%E5%8E%BB%E4%B8%8E%E5%B1%95%E6%9C%9B%E6%9C%AA%E6%9D%A5/"/>
    <id>http://drunkShrimper.github.io/blog/2019/09/11/总结过去与展望未来/</id>
    <published>2019-09-11T14:03:36.000Z</published>
    <updated>2019-09-12T08:07:49.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="向过去说再见"><a href="#向过去说再见" class="headerlink" title="向过去说再见"></a>向过去说再见</h1><p>大学生活注定是有苦有乐的。从大一的一腔热血、懵懵懂懂，到大二的<a id="more"></a>得过且过与迷茫。再到大三重新设立目标，再次上路。过去的你是怎样的已经不重要了，重要的是你现在要做什么，你以后要做什么。大一时天真无邪，以为高三奋斗了好久啊，现在终于上到了大学，可以有一份还算是不错的工作。能够让家人不用日晒雨淋的日子了。</p><p>然而现实总是很残酷，以为上到大学，大家都是积极向上努力奋斗的。可是总会有些得过且过的人在影响这你。大学的课程，上课水一水，作业上网cv一下。期末考前背一背，还能考到个不错的成绩。甚至还沾沾自喜，以为自己找到了大学生活的诀窍。</p><p>然而，不管过去的你是如何的，只要能够设立目标，重新上路，努力提升自己，那就是最好的。</p><h1 id="拥抱新生活"><a href="#拥抱新生活" class="headerlink" title="拥抱新生活"></a>拥抱新生活</h1><p>在写这个博客时，我也是下了不少的决心的，因为自己的技术水平还远远不过关。还要花时间精力在写博客上，是不是太浪费时间了。然而，尽管自己还有很多需要努力的地方，还有继续奋斗。我还是想通过博客的方式记录一下自己的生活，不仅是技术上的，也是生活上的。</p><p>希望自己能过在接下来的日子里努力奋斗，一点一点的提升自己。因为大三还是有一些课程需要上（尽管我觉得听那些老师讲课并没有什么用，还不如自己跟着mooc学习），不能专心于自己的学习计划。所以我决定先给自己定几个短期的小目标，循序渐进。</p><p>同时也希望那些还在迷茫中的朋友能够尽快找到奋斗的目标，不断前进！</p><h1 id="短期计划"><a href="#短期计划" class="headerlink" title="短期计划"></a>短期计划</h1><ol><li>花大概一小时的时间学习Markdown语法，并使用博客记录学习笔记</li><li>将一些比较重要的有道云笔记的学习记录搬运过来</li><li>学习常用的办公软件 word Excel PPT</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;向过去说再见&quot;&gt;&lt;a href=&quot;#向过去说再见&quot; class=&quot;headerlink&quot; title=&quot;向过去说再见&quot;&gt;&lt;/a&gt;向过去说再见&lt;/h1&gt;&lt;p&gt;大学生活注定是有苦有乐的。从大一的一腔热血、懵懵懂懂，到大二的
    
    </summary>
    
    
      <category term="生活" scheme="http://drunkShrimper.github.io/blog/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="情感" scheme="http://drunkShrimper.github.io/blog/tags/%E6%83%85%E6%84%9F/"/>
    
  </entry>
  
</feed>
